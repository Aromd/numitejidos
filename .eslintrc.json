{
  "root": true,
  "ignorePatterns": [
    "projects/**/*"
  ],
  "plugins": ["unused-imports"],
  "overrides": [
    {
      "files": [
        "*.ts"
      ],
      "parserOptions": {
        "project": ["tsconfig.json", "e2e/tsconfig.json"],
        "createDefaultProgram": true
      },
      "extends": [
        "eslint:recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:@angular-eslint/recommended",
        "plugin:@angular-eslint/template/process-inline-templates"
      ],
      "rules": {
        "@angular-eslint/directive-selector": [
          "error",
          {
            "type": "attribute",
            "prefix": "app",
            "style": "camelCase"
          }
        ],
        "@angular-eslint/component-selector": [
          "error",
          {
            "type": "element",
            "prefix": ["app", "common"],
            "style": "kebab-case"
          }
        ],
        "@typescript-eslint/no-unused-vars": [
            //PERMITE TENER PARAMETRO CON NOMBRE ERR EN LOS CATCH.
            "error",
            {
              "varsIgnorePattern": "err",
              "argsIgnorePattern": "err"
            }
          ],
          "unused-imports/no-unused-imports": "error", //PERMITE ELIMINAR LAS IMPORTACIONES NO UTILIZADAS AUTOMATICAMENTE
          "space-infix-ops": "warn", // ERROR AL NO PONER  ESPACIOS EN BLANCO ALREDEDOR DE OPERADORES
          "space-before-blocks": "warn", //ERROR AL NO PONER ESPACIOS ANTES DE LLAVES
          "no-console": ["warn", { "allow": ["error"] }], //WARNING AL TENER CONSOLE.LOGS y CONSOLE.WARN
          "@typescript-eslint/semi": ["warn", "always"], //ERROR AL NO AGREGAR PUNTO Y COMA (;)
          "@typescript-eslint/quotes": [
            "warn",
            "single",
            {
                "avoidEscape": true,
                "allowTemplateLiterals": true
            }
           ], //WARNING AL PONER COMILLAS DOBLES
          "@typescript-eslint/prefer-const": "off", // PERMITE O PROHIBE EL USO DE CONST EN LUGAR DE LET CUANDO SEA POSIBLE
          "@typescript-eslint/keyword-spacing": ["warn"], //ERROR AL NO DEJAR ESPACIOS EN ELEMENTOS DE SYNTAXIS IF,ELSE,ETC
          "@typescript-eslint/ban-types": "off", //PERMITE EL USO DE TIPOS ESPECIFICOS, "OBJECT" POR EJEMPLO
          "@typescript-eslint/member-ordering": 0, //PERMITE MAYOR LIBERTAD DE NOMENCLATURA DE OBJETOS
          "@typescript-eslint/naming-convention": 0, //PERMITE MAYOR LIBERTAD DE NOMENCLATURA DE CLASES
          "@typescript-eslint/explicit-module-boundary-types": "off", //PERMITE NO ESPECIFICAR EL RETORNO DE LAS FUNCIONES
          "@typescript-eslint/no-empty-function": ["error"], //ERROR AL TENER FUNCIONES FUNCIONES VACIAS
          "@typescript-eslint/no-empty-interface": ["error"], //ERROR AL TENER INTERFACES VACIA
          "@typescript-eslint/no-unnecessary-boolean-literal-compare": ["warn"], //ERROR AL COMPPRAR VALORES BOOLEANOS CON LITERALES BOOLEANOS
          "@angular-eslint/no-lifecycle-call": ["error"], //ERROR AL LLAMAR EXPLICITAMENTE A METODOS DE CICLO DE VIDA
          "@angular-eslint/no-output-on-prefix": "off", //PERMITE AGREGAR EL PREFIJO "ON" EN UN OUTPUT
          "@angular-eslint/use-lifecycle-interface": ["error"], //ERROR AL TENER CICLOS DE VIDA VACIOS
          "@typescript-eslint/explicit-function-return-type": "warn",
          "@typescript-eslint/explicit-member-accessibility": [
            "warn",
            {
              "accessibility": "explicit",
              "ignoredMethodNames": [
                "ngOnInit",
                "ngAfterViewInit",
                "ngOnChanges",
                "ngDoCheck",
                "ngAfterContentInit",
                "ngAfterContentChecked",
                "ngAfterViewChecked",
                "ngOnDestroy"
              ],
              "overrides": {
                "accessors": "explicit",
                "constructors": "no-public",
                "methods": "explicit",
                "properties": "explicit"
              }
            }
          ],
          "no-multiple-empty-lines": "warn"
      }
    },
    {
      "files": [
        "*.html"
      ],
      "extends": [
        "plugin:@angular-eslint/template/recommended",
        "plugin:@angular-eslint/template/accessibility"
      ],
      "rules": {}
    }
  ]
}
